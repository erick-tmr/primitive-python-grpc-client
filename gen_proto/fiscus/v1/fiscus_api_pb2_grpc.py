# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from fiscus.v1 import fiscus_api_pb2 as fiscus_dot_v1_dot_fiscus__api__pb2


class FiscusAPIStub(object):
  """Handles all Fiscus endpoints.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetNfe = channel.unary_unary(
        '/loggi.fiscus.v1.FiscusAPI/GetNfe',
        request_serializer=fiscus_dot_v1_dot_fiscus__api__pb2.GetNfeRequest.SerializeToString,
        response_deserializer=fiscus_dot_v1_dot_fiscus__api__pb2.GetNfeResponse.FromString,
        )


class FiscusAPIServicer(object):
  """Handles all Fiscus endpoints.
  """

  def GetNfe(self, request, context):
    """Get a NF-e given an key.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FiscusAPIServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetNfe': grpc.unary_unary_rpc_method_handler(
          servicer.GetNfe,
          request_deserializer=fiscus_dot_v1_dot_fiscus__api__pb2.GetNfeRequest.FromString,
          response_serializer=fiscus_dot_v1_dot_fiscus__api__pb2.GetNfeResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'loggi.fiscus.v1.FiscusAPI', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
