# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from xborder.v1 import nocnoc_api_pb2 as xborder_dot_v1_dot_nocnoc__api__pb2


class NocnocAPIStub(object):
  """Handles Nocnoc API.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.NocnocUpdateStatus = channel.unary_unary(
        '/loggi.xborder.nocnoc.v1.NocnocAPI/NocnocUpdateStatus',
        request_serializer=xborder_dot_v1_dot_nocnoc__api__pb2.NocnocUpdateStatusRequest.SerializeToString,
        response_deserializer=xborder_dot_v1_dot_nocnoc__api__pb2.NocnocUpdateStatusResponse.FromString,
        )


class NocnocAPIServicer(object):
  """Handles Nocnoc API.
  """

  def NocnocUpdateStatus(self, request, context):
    """The endpoint in which Nocnoc should send us status updates.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_NocnocAPIServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'NocnocUpdateStatus': grpc.unary_unary_rpc_method_handler(
          servicer.NocnocUpdateStatus,
          request_deserializer=xborder_dot_v1_dot_nocnoc__api__pb2.NocnocUpdateStatusRequest.FromString,
          response_serializer=xborder_dot_v1_dot_nocnoc__api__pb2.NocnocUpdateStatusResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'loggi.xborder.nocnoc.v1.NocnocAPI', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
