# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from loggi_web import auth_pb2 as loggi__web_dot_auth__pb2


class AuthenticationServiceStub(object):
  """Service responsible for remote authentication. The service works by validating email/password
  of a user against an authority system (like loggi-web). In case the email represents a valid user
  and the password matches, a valid AutheticateUserResponse should be returned. In case of invalid
  email or mismatching password, an Unauthorized error should be raised, without any additional
  information
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Authenticate = channel.unary_unary(
        '/loggi.proto.AuthenticationService/Authenticate',
        request_serializer=loggi__web_dot_auth__pb2.AuthenticateUserRequest.SerializeToString,
        response_deserializer=loggi__web_dot_auth__pb2.AuthenticateUserResponse.FromString,
        )


class AuthenticationServiceServicer(object):
  """Service responsible for remote authentication. The service works by validating email/password
  of a user against an authority system (like loggi-web). In case the email represents a valid user
  and the password matches, a valid AutheticateUserResponse should be returned. In case of invalid
  email or mismatching password, an Unauthorized error should be raised, without any additional
  information
  """

  def Authenticate(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AuthenticationServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Authenticate': grpc.unary_unary_rpc_method_handler(
          servicer.Authenticate,
          request_deserializer=loggi__web_dot_auth__pb2.AuthenticateUserRequest.FromString,
          response_serializer=loggi__web_dot_auth__pb2.AuthenticateUserResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'loggi.proto.AuthenticationService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
