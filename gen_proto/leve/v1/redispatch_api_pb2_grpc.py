# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from leve.v1 import redispatch_api_pb2 as leve_dot_v1_dot_redispatch__api__pb2


class RedispatchAPIStub(object):
  """Resdispatch services used by Leve.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Create = channel.unary_unary(
        '/loggi.leve.v1.RedispatchAPI/Create',
        request_serializer=leve_dot_v1_dot_redispatch__api__pb2.CreateRequest.SerializeToString,
        response_deserializer=leve_dot_v1_dot_redispatch__api__pb2.CreateResponse.FromString,
        )


class RedispatchAPIServicer(object):
  """Resdispatch services used by Leve.
  """

  def Create(self, request, context):
    """This call creates a redispatch by creating the request in the service
    provider and updating the package metadata with the redispatch
    information. The result contains an url for the new label.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RedispatchAPIServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Create': grpc.unary_unary_rpc_method_handler(
          servicer.Create,
          request_deserializer=leve_dot_v1_dot_redispatch__api__pb2.CreateRequest.FromString,
          response_serializer=leve_dot_v1_dot_redispatch__api__pb2.CreateResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'loggi.leve.v1.RedispatchAPI', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
