# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from vrpipe.v1 import vrpipe_api_pb2 as vrpipe_dot_v1_dot_vrpipe__api__pb2


class VrpipeAPIStub(object):
  """Handles VRPipe API.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AddPackagesInRoute = channel.unary_unary(
        '/loggi.vrpipe.v1.VrpipeAPI/AddPackagesInRoute',
        request_serializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.AddPackagesInRouteRequest.SerializeToString,
        response_deserializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.AddPackagesInRouteResponse.FromString,
        )
    self.CloseBag = channel.unary_unary(
        '/loggi.vrpipe.v1.VrpipeAPI/CloseBag',
        request_serializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.CloseBagRequest.SerializeToString,
        response_deserializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.CloseBagResponse.FromString,
        )
    self.MakeBid = channel.unary_unary(
        '/loggi.vrpipe.v1.VrpipeAPI/MakeBid',
        request_serializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.MakeBidRequest.SerializeToString,
        response_deserializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.MakeBidResponse.FromString,
        )
    self.RoutePackage = channel.unary_unary(
        '/loggi.vrpipe.v1.VrpipeAPI/RoutePackage',
        request_serializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.RoutePackageRequest.SerializeToString,
        response_deserializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.RoutePackageResponse.FromString,
        )
    self.SetPackage = channel.unary_unary(
        '/loggi.vrpipe.v1.VrpipeAPI/SetPackage',
        request_serializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.SetPackageRequest.SerializeToString,
        response_deserializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.SetPackageResponse.FromString,
        )
    self.SetRouter = channel.unary_unary(
        '/loggi.vrpipe.v1.VrpipeAPI/SetRouter',
        request_serializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.SetRouterRequest.SerializeToString,
        response_deserializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.SetRouterResponse.FromString,
        )
    self.SolveTSP = channel.unary_unary(
        '/loggi.vrpipe.v1.VrpipeAPI/SolveTSP',
        request_serializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.SolveTSPRequest.SerializeToString,
        response_deserializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.SolveTSPResponse.FromString,
        )
    self.StaticRoute = channel.unary_unary(
        '/loggi.vrpipe.v1.VrpipeAPI/StaticRoute',
        request_serializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.StaticRouteRequest.SerializeToString,
        response_deserializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.StaticRouteResponse.FromString,
        )


class VrpipeAPIServicer(object):
  """Handles VRPipe API.
  """

  def AddPackagesInRoute(self, request, context):
    """RPC that add packages to a route.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CloseBag(self, request, context):
    """RPC that closes a bag.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def MakeBid(self, request, context):
    """RPC that make a bid for a package to fit in a bag.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RoutePackage(self, request, context):
    """RPC that route a package.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetPackage(self, request, context):
    """RPC that set package.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetRouter(self, request, context):
    """RPC that set a router.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SolveTSP(self, request, context):
    """RPC that calls the Traveling salesman problem solver.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StaticRoute(self, request, context):
    """RPC that solve the static routing problem.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_VrpipeAPIServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AddPackagesInRoute': grpc.unary_unary_rpc_method_handler(
          servicer.AddPackagesInRoute,
          request_deserializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.AddPackagesInRouteRequest.FromString,
          response_serializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.AddPackagesInRouteResponse.SerializeToString,
      ),
      'CloseBag': grpc.unary_unary_rpc_method_handler(
          servicer.CloseBag,
          request_deserializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.CloseBagRequest.FromString,
          response_serializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.CloseBagResponse.SerializeToString,
      ),
      'MakeBid': grpc.unary_unary_rpc_method_handler(
          servicer.MakeBid,
          request_deserializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.MakeBidRequest.FromString,
          response_serializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.MakeBidResponse.SerializeToString,
      ),
      'RoutePackage': grpc.unary_unary_rpc_method_handler(
          servicer.RoutePackage,
          request_deserializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.RoutePackageRequest.FromString,
          response_serializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.RoutePackageResponse.SerializeToString,
      ),
      'SetPackage': grpc.unary_unary_rpc_method_handler(
          servicer.SetPackage,
          request_deserializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.SetPackageRequest.FromString,
          response_serializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.SetPackageResponse.SerializeToString,
      ),
      'SetRouter': grpc.unary_unary_rpc_method_handler(
          servicer.SetRouter,
          request_deserializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.SetRouterRequest.FromString,
          response_serializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.SetRouterResponse.SerializeToString,
      ),
      'SolveTSP': grpc.unary_unary_rpc_method_handler(
          servicer.SolveTSP,
          request_deserializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.SolveTSPRequest.FromString,
          response_serializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.SolveTSPResponse.SerializeToString,
      ),
      'StaticRoute': grpc.unary_unary_rpc_method_handler(
          servicer.StaticRoute,
          request_deserializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.StaticRouteRequest.FromString,
          response_serializer=vrpipe_dot_v1_dot_vrpipe__api__pb2.StaticRouteResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'loggi.vrpipe.v1.VrpipeAPI', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
