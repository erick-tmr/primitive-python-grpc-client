# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from one.order.v1 import pickup_scheduler_api_pb2 as one_dot_order_dot_v1_dot_pickup__scheduler__api__pb2


class PickupSchedulerAPIStub(object):
  """Handle all order scheduler endpoints.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.PickupOrderSchedule = channel.unary_unary(
        '/loggi.one.order.v1.PickupSchedulerAPI/PickupOrderSchedule',
        request_serializer=one_dot_order_dot_v1_dot_pickup__scheduler__api__pb2.PickupOrderScheduleRequest.SerializeToString,
        response_deserializer=one_dot_order_dot_v1_dot_pickup__scheduler__api__pb2.PickupOrderScheduleResponse.FromString,
        )


class PickupSchedulerAPIServicer(object):
  """Handle all order scheduler endpoints.
  """

  def PickupOrderSchedule(self, request, context):
    """Ths service is used to schedule a pickup appointment.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PickupSchedulerAPIServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'PickupOrderSchedule': grpc.unary_unary_rpc_method_handler(
          servicer.PickupOrderSchedule,
          request_deserializer=one_dot_order_dot_v1_dot_pickup__scheduler__api__pb2.PickupOrderScheduleRequest.FromString,
          response_serializer=one_dot_order_dot_v1_dot_pickup__scheduler__api__pb2.PickupOrderScheduleResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'loggi.one.order.v1.PickupSchedulerAPI', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
